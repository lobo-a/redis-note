
redis使用字符串对象来表示位数组，字符串对象使用的是SDS是二进制安全的，可以设置某位上的值，也可以进行位运算。

SETBIT用于位数组指定偏移量上的二进制设置值
BITCOUNT用于统计位数组里面，值为1的二进制位的数量，算法实现使用查表算法和variable-precision SWAR算法
BITOP对多个位数组按位与(and)或(or)非(xor)进行位运算


一、查表算法：利用空间换时间
	1、预先创建一张表，键位8/16位数组，值为对应的值即1的位数
	2、按每8/16位分组位数组，查找每一组对应的统计值累加
	3、查表是O(1)时间复杂度，降低了16倍的难度

二、variable-precision SWAR算法

	一下是32位长度位数组的算法实现
	uint32_t swar(uint32_t i){
		// step 1: 计算出的值i的二进制表示可以按每两个二进制为一组进行分组
		// ，各组的二进制表示该组的汉明距离
		i = (i & 0x55555555) + ((i >> 1) & 0x55555555);
		// step 2：计算出的值i的二进制表示可以按每四个二进制为一组进行分组
		// ，各组的二进制表示该组的汉明距离
		i = (i & 0x33333333) + ((i >> 2) & 0x33333333);
		// step 3：计算出的值i的二进制表示可以按每八个二进制为一组进行分组
		// ，各组的二进制表示该组的汉明距离
		i = (i & 0xOFOFOFOF) + ((i >> 4) & 0xOFOFOFOF);
		// step 4：其中i * (0x01010101)是计算出位数组的汉明距离并记录在最高8位，>> 24则是右移24位得到汉明距离
		i = (i * (0x01010101) >> 24)

		return i;
	}

1、redis服务器通过套接字与客户端进行连接，而文件事件是对套接字的操作的抽象。

2、redis服务器和客户端的通信会产生相应的文件事件(aceept、read、write、close等)，服务器通过监听并处理这些事件来完成相应的网络操作。

3、redis基于Reactor模式开发了自己的网络事件处理模型，文件事件处理器(file event handler)
	
	注：reactor设计模式是event-driven architecture的一种实现方式，处理多个客户端并发的向服务端请求服务的场景。每种服务在服务端可能由多个方法组成。reactor会解耦并发请求的服务并分发给对应的事件处理器来处理。其中netty、node.js、java的nio采用此模式开发。

4、文件事件处理器实现

	套接字：服务器通常或连接多个客户端，并发连接和并发产生事件；

	io多路复用程序：监听多个套接字，并将产生了事件的套接字(指针)以有序、同步、单个的队列方式传送给分派器。

	分派器：接受传来的套接字和事件类型，经过io多路复用程序的队列传输处理，这里执行已经是线程安全了，会根据事件调用相关的事件处理器

	处理器：就是一个一个的C语言函数